# https://peps.python.org/pep-0517/
[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

# https://hatch.pypa.io/latest/config/metadata/
[tool.hatch.version]
source = "vcs"

# read more about configuring hatch at:
# https://hatch.pypa.io/latest/config/build/
[tool.hatch.build.targets.wheel]
only-include = ["src"]
sources = ["src"]
[tool.hatch.metadata]
allow-direct-references = true

# https://peps.python.org/pep-0621/
[project]
name = "pyclem"
dynamic = ["version"]
description = "Package containing tools and napari-widgets for manual correction and analysis of RGB-segmentation masks as used in the analysis of CLEM experiments."
readme = "README.md"
requires-python = ">=3.9"
license = { text = "BSD-3-Clause" }
authors = [{ name = "Andreas M Arnold", email = "andreas.m.arnold@gmail.com" }]
# https://pypi.org/classifiers/
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Typing :: Typed",
]
# add your package dependencies here
dependencies = [
    "affinder @ git+https://github.com/jni/affinder.git",
    "aicsimageio",
    "cython==3.0.5",  # needed for setup.py of pycocotools (therefore run install of pycocotools AFTER this)
    "h5py==3.9.0",
    "imgaug==0.4.0",
    "ipython==7.34.0",
    "ipython-genutils==0.2.0",
    "ipython-sql==0.5.0",
    "jupyter",
    "keras==2.14.0",
    "matplotlib==3.7.1",
    "mask-rcnn-tf2 @ git+https://github.com/z-mahmud22/Mask-RCNN_TF2.14.0.git",
    "napari==0.5.5",
    #"napari @ git+https://github.com/napari/napari.git",
    "napari-aicsimageio",
    "numpy==1.23.5",
    "opencv-contrib-python==4.8.0.76",
    "opencv-python==4.8.0.76",
    "pandas",
    "pillow==9.4.0",
    "PyQt5",
    "scikit-image==0.19.3",
    "scipy==1.11.3",
    "shapely",
    "tensorboard==2.14.1",
    "tensorflow[and-cuda]==2.14.0",
]

# https://peps.python.org/pep-0621/#dependencies-optional-dependencies
# "extras" (e.g. for `pip install .[test]`)
[project.optional-dependencies]
# add dependencies used for testing here
test = [
    "pytest",
    "pytest-cov",
    "sniffio",
]
# add anything else you like to have in your dev environment here
dev = [
    "black",
    "ipython",
    "mypy",
    "pdbpp",  # https://github.com/pdbpp/pdbpp
    "pre-commit",
    "rich",  # https://github.com/Textualize/rich
    "ruff",
]

[project.urls]
homepage = "https://github.com/andreasmarnold/pyclem"
repository = "https://github.com/andreasmarnold/pyclem"

# Entry points
# https://peps.python.org/pep-0621/#entry-points
# same as console_scripts entry point
# [project.scripts]
# pyclem-cli = "pyclem:main_cli"

# [project.entry-points."some.group"]
# tomatoes = "pyclem:main_tomatoes"

# https://docs.astral.sh/ruff
[tool.ruff]
line-length = 88
target-version = "py38"
src = ["src"]
# https://docs.astral.sh/ruff/rules
select = [
    "E",    # style errors
    "W",    # style warnings
    "F",    # flakes
    "D",    # pydocstyle
    "I",    # isort
    "UP",   # pyupgrade
    "C4",   # flake8-comprehensions
    "B",    # flake8-bugbear
    "A001", # flake8-builtins
    "RUF",  # ruff-specific rules
    "TCH",  # flake8-type-checking
    "TID",  # flake8-tidy-imports
]

[tool.ruff.lint]
pydocstyle = { convention = "numpy" }
extend-select = [
    "D417", # Missing argument descriptions in Docstrings
]
extend-ignore = [
    "D401", # First line should be in imperative mood (remove to opt in)
]

[tool.ruff.per-file-ignores]
"tests/*.py" = ["D", "S"]
"setup.py" = ["D"]

# https://mypy.readthedocs.io/en/stable/config_file.html
[tool.mypy]
files = "src/**/"
strict = true
disallow_any_generics = false
disallow_subclassing_any = false
show_error_codes = true
pretty = true

# # module specific overrides
# [[tool.mypy.overrides]]
# module = ["numpy.*",]
# ignore_errors = true

# https://docs.pytest.org/en/6.2.x/customize.html
[tool.pytest.ini_options]
minversion = "6.0"
testpaths = ["tests"]
filterwarnings = ["error"]

# https://coverage.readthedocs.io/en/6.4/config.html
[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "@overload",
    "except ImportError",
    "\\.\\.\\.",
    "raise NotImplementedError()",
    "pass",
]
show_missing = true

[tool.coverage.run]
source = ["pyclem"]

# https://github.com/mgedmin/check-manifest#configuration
# add files that you want check-manifest to explicitly ignore here
# (files that are in the repo but shouldn't go in the package)
[tool.check-manifest]
ignore = [
    ".pre-commit-config.yaml",
    ".ruff_cache/**/*",
    "tests/**/*",
]
